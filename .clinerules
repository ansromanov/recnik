always source .venv/bin/activate on new terminal
# Clean Rules for Python Microservices (MVC + 12-Factor)
- do not open browser on acting, as it broke Cline API calls
- do not create additional md files
- always move documentation files (like CODE_QUALITY.md) to docs/cline/
- refer to docs/cline/ when working on tasks for project-specific documentation
- refer to docs/cursor/ when looking for Cursor-managed documentation, like roadmap, architecture, etc.

## Structure
- Use MVC: models/, views/, controllers/
- One service per domain, each as a Python package
- Expose RESTful APIs via FastAPI or Flask

## Environment & Tooling
- Always use uv for Python environment:
      - uv venv for virtualenv creation
      - uv pip for package installation
      - uv requirements for dep management
- Use Makefile for common tasks:
      - make install (uv pip install)
      - make test (run tests)
      - make lint (run linters)
      - make format (run formatters)
      - make run (start service)
- .env files for config (use dotenv loaders)
- Dockerize each service

## 12-Factor Compliance
- Codebase: 1 repo per service
- Dependencies: use pyproject.toml + uv
- Config: via env vars only
- Logs: JSON to stdout
- Stateless processes; scale horizontally
- Port binding: $PORT env

## Docs
- Each service: minimal README.md (purpose, setup, endpoints)
- Architecture in docs/architecture.mmd (Mermaid)
- Update diagram on changes

## Testing
- Tests in tests/ (models, controllers, endpoints)
- Use pytest with uv pip
- Mock external calls
- Enforce tests in CI

## Code Quality
- Format: black (via make format)
- Lint: ruff or flake8 (via make lint)
- Type checks: mypy or pyright
- Clean imports, no circular deps

## Observability
- Logs: JSON, include timestamp, level, service, req ID
- Endpoints:
      - GET /health (no auth)
      - GET /metrics (Prometheus)

## Sample Service Structure
- controllers/ - Business logic
- models/ - Database models
- views/ - API endpoints (main.py)
- main.py - Flask app entry point
- health.py - Health check endpoint
- metrics.py - Prometheus metrics
- Makefile - Task automation
